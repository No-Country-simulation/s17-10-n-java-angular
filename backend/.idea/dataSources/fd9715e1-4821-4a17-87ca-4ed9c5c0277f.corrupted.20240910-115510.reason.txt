com.intellij.util.io.ClosedStorageException: storage is already closed; path C:\Users\gvill\AppData\Local\JetBrains\IntelliJIdea2024.2\data-source\421ce663\fd9715e1-4821-4a17-87ca-4ed9c5c0277f\entities\entities.dat_i
	at com.intellij.util.io.PagedFileStorage.doGetBufferWrapper(PagedFileStorage.java:457)
	at com.intellij.util.io.PagedFileStorage.getBufferWrapper(PagedFileStorage.java:432)
	at com.intellij.util.io.PagedFileStorage.getByteBuffer(PagedFileStorage.java:193)
	at com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.lockBuffer(IntToIntBtree.java:477)
	at com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.syncWithStore(IntToIntBtree.java:463)
	at com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.setAddress(IntToIntBtree.java:459)
	at com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.setAddress(IntToIntBtree.java:446)
	at com.intellij.util.io.IntToIntBtree$BtreeRootNode.syncWithStore(IntToIntBtree.java:128)
	at com.intellij.util.io.IntToIntBtree$BtreeRootNode.getNodeView(IntToIntBtree.java:133)
	at com.intellij.util.io.IntToIntBtree.initAccessNodeView(IntToIntBtree.java:205)
	at com.intellij.util.io.IntToIntBtree.get(IntToIntBtree.java:177)
	at com.intellij.util.io.PersistentBTreeEnumerator.getNonNegativeValue(PersistentBTreeEnumerator.java:495)
	at com.intellij.util.io.PersistentMapImpl.doContainsMapping(PersistentMapImpl.java:738)
	at com.intellij.util.io.PersistentMapImpl.containsKey(PersistentMapImpl.java:725)
	at com.intellij.util.io.PersistentHashMap.containsMapping(PersistentHashMap.java:204)
	at com.intellij.database.model.ModelEntityStoragePersistentBackend.contains(ModelEntityStoragePersistentBackend.kt:172)
	at com.intellij.database.model.ModelEntityStorage.allocateEntityId(ModelEntityStorage.java:78)
	at com.intellij.database.model.BaseModel$BaseFamily.lambda$createBulk$0(BaseModel.java:1112)
	at com.intellij.util.containers.ContainerUtil.map(ContainerUtil.java:1980)
	at com.intellij.database.model.BaseModel$BaseFamily.createBulk(BaseModel.java:1110)
	at com.intellij.database.model.BaseModel.createBulk(BaseModel.java:2034)
	at com.intellij.database.model.BaseModel.createBulk(BaseModel.java:2038)
	at com.intellij.database.model.serialization.ModelImporter$BulkAppender.commit(ModelImporter.java:443)
	at com.intellij.database.model.serialization.ModelImporter.populateModel(ModelImporter.java:345)
	at com.intellij.database.model.serialization.ModelImporter.lambda$importToModel$0(ModelImporter.java:315)
	at com.intellij.database.model.BaseModel.modify(BaseModel.java:171)
	at com.intellij.database.model.BaseModel.modify(BaseModel.java:153)
	at com.intellij.database.model.serialization.ModelImporter.importToModel(ModelImporter.java:313)
	at com.intellij.database.model.serialization.ModelImporter.importModel(ModelImporter.java:307)
	at com.intellij.database.model.serialization.ModelImporter.deserialize(ModelImporter.java:77)
	at com.intellij.database.dataSource.DataSourceModelStorageImpl$Companion.readModel(DataSourceModelStorageImpl.kt:598)
	at com.intellij.database.dataSource.DataSourceModelStorageImpl$Companion.readModel(DataSourceModelStorageImpl.kt:581)
	at com.intellij.database.dataSource.DataSourceModelStorageImpl.readModel(DataSourceModelStorageImpl.kt:371)
	at com.intellij.database.dataSource.DataSourceModelStorageImpl.loadModels(DataSourceModelStorageImpl.kt:260)
	at com.intellij.database.dataSource.DataSourceModelStorageImpl.readStateHeavy(DataSourceModelStorageImpl.kt:159)
	at com.intellij.database.dataSource.DataSourceModelStorageImpl.continueLoadingWhenInitialized$lambda$7$lambda$6$lambda$5$lambda$4(DataSourceModelStorageImpl.kt:142)
	at com.intellij.openapi.progress.util.BackgroundTaskUtil.lambda$runUnderDisposeAwareIndicator$15(BackgroundTaskUtil.java:371)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$2(CoreProgressManager.java:217)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$executeProcessUnderProgress$13(CoreProgressManager.java:660)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:735)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computeUnderProgress(CoreProgressManager.java:691)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:659)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:79)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:202)
	at com.intellij.openapi.progress.util.BackgroundTaskUtil.runUnderDisposeAwareIndicator(BackgroundTaskUtil.java:366)
	at com.intellij.openapi.progress.util.BackgroundTaskUtil.runUnderDisposeAwareIndicator(BackgroundTaskUtil.java:349)
	at com.intellij.database.dataSource.DataSourceModelStorageImpl.continueLoadingWhenInitialized$lambda$7$lambda$6$lambda$5(DataSourceModelStorageImpl.kt:141)
	at com.intellij.database.util.AsyncTask$Frame$compute$$inlined$supply$1$1.run(AsyncTask.kt:851)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$executeProcessUnderProgress$13(CoreProgressManager.java:660)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:735)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computeUnderProgress(CoreProgressManager.java:691)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:659)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:79)
	at com.intellij.database.util.AsyncTask$Frame$compute$$inlined$supply$1.get(AsyncTask.kt:876)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at com.intellij.database.dataSource.DataSourceModelStorageImpl$continueLoadingWhenInitialized$2$1$1$1.invokeSuspend(DataSourceModelStorageImpl.kt:140)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:608)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:873)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:763)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:750)
